name: my-docker-project

services:
  app:
    build: .
    image: my-app-image # the name of this image
    container_name: my-app-container
    command: /app/entrypoint.sh
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres
    container_name: my-postgres-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    container_name: my-redis-container
    restart: unless-stopped # unless stopped manually
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    image: my-app-image
    container_name: my-celery-container
    command: celery -A core worker -E -l info
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - app

  flower:
    image: my-app-image
    container_name: my-flower-container
    command: celery -A core flower --basic_auth=admin:password123
    ports:
      - "5555:5555"
    env_file:
      - ./.env
    depends_on:
      - app
      - redis

  beat:
    image: my-app-image
    container_name: my-beat-container
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - app

  elasticsearch:
    container_name: search
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

volumes:
  postgres_data:
  redis_data:
  esdata01:
